beta = rep(beta[k], each = reps)))
}
}
}
r2_box <- r2_box[-1,]
r2_box$n <- as.factor(r2_box$n)
levels(r2_box$n) <- paste0(rep("n = ", each = length(n)), levels(r2_box$n))
levels(r2_box$n)
r2_box$beta <- as.factor(r2_box$beta)
levels(r2_box$beta) <- paste0(rep("beta = ", each = length(beta)), levels(r2_box$beta))
levels(r2_box$beta)
names(r2_box) <- c("sim", "norm", "n", "betak")
head(r2_box)
ggplot(r2_box, aes(x = norm, y = sim)) +
geom_point() +
labs(x = "R-squared (normal error distribution)",
y = str_c("R-squared (", eps.dist, " error distribution)"),
title = "Simulated R-squared") +
geom_abline(slope = 1, intercept = 0)+
facet_wrap(n~betak)
plotRegsim <- function(reps = 1000,
n = c(50, 100, 500),
beta = c(0.4, 0.8, 1, 1.5),
eps.dist = "uniform",
which.plot = "r2",
...){
indx <- seq(1,reps, by= 1)
power_box <- rep(NA, each = 4)
beta_box<- rep(NA, each = 4)
r2_box <- rep(NA, each = 4)
for(j in seq_along(n)){
for(k in seq_along(beta)){
lis <- regsim(reps = reps,
n = n[j],
beta = beta[k],
eps.dist = eps.dist,
... = ... )
if(which.plot == "power"){
power_box <- rbind(power_box, cbind(lis$power,
n = rep(n[j], each = reps),
beta = rep(beta[k], each = reps)))
}
if(which.plot == "beta hat"){
beta_box <- rbind(beta_box, cbind(lis$beta_hat,
n = rep(n[j], each = reps),
beta = rep(beta[k], each = reps)))
}
if(which.plot == "r2"){
r2_box <- rbind(r2_box, cbind(lis$rsq,
n = rep(n[j], each = reps),
beta = rep(beta[k], each = reps)))
}
}
}
if(which.plot == "power"){
names(power_box) <- c("sim", "norm", "n", "betak")
power_box <- melt(power_box[-1,], id = c("n", "betak"))
p <- ggplot(power_box, aes(x = n, y = value)) +
geom_line(aes(group = variable, color = variable,
linetype = variable),
position=position_dodge(width=0.9)) +
facet_wrap(~betak) +
labs(x = "Sample size", y = "Power",
title = "Simulated Power")
return(p)
}elseif(which.plot == "beta hat"){
beta_box <- beta_box[-1,]
beta_box$n <- as.factor(beta_box$n)
levels(beta_box$n) <- paste0(rep("n = ", each = length(n)), levels(beta_box$n))
beta_box$beta <- as.factor(beta_box$beta)
levels(beta_box$beta) <- paste0(rep("n = ", each = length(beta)), levels(beta_box$beta))
names(beta_box) <- c("sim", "norm", "n", "betak")
p <-ggplot(beta_box, aes(x = norm, y = sim)) +
geom_point() +
labs(y = str_c("Estimated Coefficients (", eps.dist, " error distribution)"),
x = "Estimated Coefficients  (normal error distribution)",
title ="Simulated Estimated coefficients") +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(n~betak)
return(p)
}elseif(which.plot == "r2"){
r2_box <- r2_box[-1,]
r2_box$n <- as.factor(r2_box$n)
levels(r2_box$n) <- paste0(rep("n = ", each = length(n)), levels(r2_box$n))
r2_box$beta <- as.factor(r2_box$beta)
levels(r2_box$beta) <- paste0(rep("beta = ", each = length(beta)), levels(r2_box$beta))
names(r2_box) <- c("sim", "norm", "n", "betak")
p <- ggplot(r2_box, aes(x = norm, y = sim)) +
geom_point() +
labs(x = "R-squared (normal error distribution)",
y = str_c("R-squared (", eps.dist, " error distribution)"),
title = "Simulated R-squared") +
geom_abline(slope = 1, intercept = 0)+
facet_wrap(n~betak)
return(p)
}
}
plotRegsim <- function(reps = 1000,
n = c(50, 100, 500),
beta = c(0.4, 0.8, 1, 1.5),
eps.dist = "uniform",
which.plot = "r2",
...){
indx <- seq(1,reps, by= 1)
power_box <- rep(NA, each = 4)
beta_box<- rep(NA, each = 4)
r2_box <- rep(NA, each = 4)
for(j in seq_along(n)){
for(k in seq_along(beta)){
lis <- regsim(reps = reps,
n = n[j],
beta = beta[k],
eps.dist = eps.dist,
... = ... )
if(which.plot == "power"){
power_box <- rbind(power_box, cbind(lis$power,
n = rep(n[j], each = reps),
beta = rep(beta[k], each = reps)))
}
if(which.plot == "beta hat"){
beta_box <- rbind(beta_box, cbind(lis$beta_hat,
n = rep(n[j], each = reps),
beta = rep(beta[k], each = reps)))
}
if(which.plot == "r2"){
r2_box <- rbind(r2_box, cbind(lis$rsq,
n = rep(n[j], each = reps),
beta = rep(beta[k], each = reps)))
}
}
}
if(which.plot == "power"){
names(power_box) <- c("sim", "norm", "n", "betak")
power_box <- melt(power_box[-1,], id = c("n", "betak"))
p <- ggplot(power_box, aes(x = n, y = value)) +
geom_line(aes(group = variable, color = variable,
linetype = variable),
position=position_dodge(width=0.9)) +
facet_wrap(~betak) +
labs(x = "Sample size", y = "Power",
title = "Simulated Power")
return(p)
}elseif(which.plot == "beta hat"){
beta_box <- beta_box[-1,]
beta_box$n <- as.factor(beta_box$n)
levels(beta_box$n) <- paste0(rep("n = ", each = length(n)), levels(beta_box$n))
beta_box$beta <- as.factor(beta_box$beta)
levels(beta_box$beta) <- paste0(rep("n = ", each = length(beta)), levels(beta_box$beta))
names(beta_box) <- c("sim", "norm", "n", "betak")
p <-ggplot(beta_box, aes(x = norm, y = sim)) +
geom_point() +
labs(y = str_c("Estimated Coefficients (", eps.dist, " error distribution)"),
x = "Estimated Coefficients  (normal error distribution)",
title ="Simulated Estimated coefficients") +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(n~betak)
return(p)
}elseif(which.plot == "r2"){
r2_box <- r2_box[-1,]
r2_box$n <- as.factor(r2_box$n)
levels(r2_box$n) <- paste0(rep("n = ", each = length(n)), levels(r2_box$n))
r2_box$beta <- as.factor(r2_box$beta)
levels(r2_box$beta) <- paste0(rep("beta = ", each = length(beta)), levels(r2_box$beta))
names(r2_box) <- c("sim", "norm", "n", "betak")
p <- ggplot(r2_box, aes(x = norm, y = sim)) +
geom_point() +
labs(x = "R-squared (normal error distribution)",
y = str_c("R-squared (", eps.dist, " error distribution)"),
title = "Simulated R-squared") +
geom_abline(slope = 1, intercept = 0)+
facet_wrap(n~betak)
return(p)
}
}
plotRegsim <- function(reps = 1000,
n = c(50, 100, 500),
beta = c(0.4, 0.8, 1, 1.5),
eps.dist = "uniform",
which.plot = "r2",
...){
indx <- seq(1,reps, by= 1)
power_box <- rep(NA, each = 4)
beta_box<- rep(NA, each = 4)
r2_box <- rep(NA, each = 4)
for(j in seq_along(n)){
for(k in seq_along(beta)){
lis <- regsim(reps = reps,
n = n[j],
beta = beta[k],
eps.dist = eps.dist,
... = ... )
if(which.plot == "power"){
power_box <- rbind(power_box, cbind(lis$power,
n = rep(n[j], each = reps),
beta = rep(beta[k], each = reps)))
}
if(which.plot == "beta hat"){
beta_box <- rbind(beta_box, cbind(lis$beta_hat,
n = rep(n[j], each = reps),
beta = rep(beta[k], each = reps)))
}
if(which.plot == "r2"){
r2_box <- rbind(r2_box, cbind(lis$rsq,
n = rep(n[j], each = reps),
beta = rep(beta[k], each = reps)))
}
}
}
if(which.plot == "power"){
names(power_box) <- c("sim", "norm", "n", "betak")
power_box <- melt(power_box[-1,], id = c("n", "betak"))
p <- ggplot(power_box, aes(x = n, y = value)) +
geom_line(aes(group = variable, color = variable,
linetype = variable),
position=position_dodge(width=0.9)) +
facet_wrap(~betak) +
labs(x = "Sample size", y = "Power",
title = "Simulated Power")
return(p)
}else if(which.plot == "beta hat"){
beta_box <- beta_box[-1,]
beta_box$n <- as.factor(beta_box$n)
levels(beta_box$n) <- paste0(rep("n = ", each = length(n)), levels(beta_box$n))
beta_box$beta <- as.factor(beta_box$beta)
levels(beta_box$beta) <- paste0(rep("n = ", each = length(beta)), levels(beta_box$beta))
names(beta_box) <- c("sim", "norm", "n", "betak")
p <-ggplot(beta_box, aes(x = norm, y = sim)) +
geom_point() +
labs(y = str_c("Estimated Coefficients (", eps.dist, " error distribution)"),
x = "Estimated Coefficients  (normal error distribution)",
title ="Simulated Estimated coefficients") +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(n~betak)
return(p)
}else if(which.plot == "r2"){
r2_box <- r2_box[-1,]
r2_box$n <- as.factor(r2_box$n)
levels(r2_box$n) <- paste0(rep("n = ", each = length(n)), levels(r2_box$n))
r2_box$beta <- as.factor(r2_box$beta)
levels(r2_box$beta) <- paste0(rep("beta = ", each = length(beta)), levels(r2_box$beta))
names(r2_box) <- c("sim", "norm", "n", "betak")
p <- ggplot(r2_box, aes(x = norm, y = sim)) +
geom_point() +
labs(x = "R-squared (normal error distribution)",
y = str_c("R-squared (", eps.dist, " error distribution)"),
title = "Simulated R-squared") +
geom_abline(slope = 1, intercept = 0)+
facet_wrap(n~betak)
return(p)
}
}
plotRegsim(reps = 100, n = c(50, 100, 500), beta = c(.4, .8, 1, 1.5),
eps.dist = "laplace", m = 0, s= 1,
which.plot = "r2")
plotRegsim(reps = 100, n = c(50, 100, 500), beta = c(.4, .8, 1, 1.5),
eps.dist = "uniform", min = -1, max = 1,
which.plot = "beta hat")
plotRegsim <- function(reps = 1000,
n = c(50, 100, 500),
beta = c(0.4, 0.8, 1, 1.5),
eps.dist = "uniform",
which.plot = "r2",
...){
indx <- seq(1,reps, by= 1)
power_box <- rep(NA, each = 4)
beta_box<- rep(NA, each = 4)
r2_box <- rep(NA, each = 4)
for(j in seq_along(n)){
for(k in seq_along(beta)){
lis <- regsim(reps = reps,
n = n[j],
beta = beta[k],
eps.dist = eps.dist,
... = ... )
if(which.plot == "power"){
power_box <- rbind(power_box, cbind(lis$power,
n = rep(n[j], each = reps),
beta = rep(beta[k], each = reps)))
}
if(which.plot == "beta hat"){
beta_box <- rbind(beta_box, cbind(lis$beta_hat,
n = rep(n[j], each = reps),
beta = rep(beta[k], each = reps)))
}
if(which.plot == "r2"){
r2_box <- rbind(r2_box, cbind(lis$rsq,
n = rep(n[j], each = reps),
beta = rep(beta[k], each = reps)))
}
}
}
if(which.plot == "power"){
names(power_box) <- c("sim", "norm", "n", "betak")
power_box <- melt(power_box[-1,], id = c("n", "betak"))
p <- ggplot(power_box, aes(x = n, y = value)) +
geom_line(aes(group = variable, color = variable,
linetype = variable),
position=position_dodge(width=0.9)) +
facet_wrap(~betak) +
labs(x = "Sample size", y = "Power",
title = "Simulated Power")
return(p)
}else if(which.plot == "beta hat"){
beta_box <- beta_box[-1,]
beta_box$n <- as.factor(beta_box$n)
levels(beta_box$n) <- paste0(rep("n = ", each = length(n)), levels(beta_box$n))
beta_box$beta <- as.factor(beta_box$beta)
levels(beta_box$beta) <- paste0(rep("beta = ", each = length(beta)), levels(beta_box$beta))
names(beta_box) <- c("sim", "norm", "n", "betak")
p <-ggplot(beta_box, aes(x = norm, y = sim)) +
geom_point() +
labs(y = str_c("Estimated Coefficients (", eps.dist, " error distribution)"),
x = "Estimated Coefficients  (normal error distribution)",
title ="Simulated Estimated coefficients") +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(n~betak)
return(p)
}else if(which.plot == "r2"){
r2_box <- r2_box[-1,]
r2_box$n <- as.factor(r2_box$n)
levels(r2_box$n) <- paste0(rep("n = ", each = length(n)), levels(r2_box$n))
r2_box$beta <- as.factor(r2_box$beta)
levels(r2_box$beta) <- paste0(rep("beta = ", each = length(beta)), levels(r2_box$beta))
names(r2_box) <- c("sim", "norm", "n", "betak")
p <- ggplot(r2_box, aes(x = norm, y = sim)) +
geom_point() +
labs(x = "R-squared (normal error distribution)",
y = str_c("R-squared (", eps.dist, " error distribution)"),
title = "Simulated R-squared") +
geom_abline(slope = 1, intercept = 0)+
facet_wrap(n~betak)
return(p)
}
}
plotRegsim(reps = 1000, n = c(50, 100, 500), beta = c(.4, .8, 1, 1.5),
eps.dist = "t",
which.plot = "power")
plotRegsim(reps = 1000, n = c(50, 100, 500), beta = c(.4, .8, 1, 1.5),
eps.dist = "uniform", min = -1, max = 1,
which.plot = "beta hat")
plotRegsim <- function(reps = 1000,
n = c(50, 100, 500),
beta = c(0.4, 0.8, 1, 1.5),
eps.dist = "uniform",
which.plot = "r2",
...){
indx <- seq(1,reps, by= 1)
power_box <- rep(NA, each = 4)
beta_box<- rep(NA, each = 4)
r2_box <- rep(NA, each = 4)
for(j in seq_along(n)){
for(k in seq_along(beta)){
lis <- regsim(reps = reps,
n = n[j],
beta = beta[k],
eps.dist = eps.dist,
... = ... )
if(which.plot == "power"){
power_box <- rbind(power_box, cbind(lis$power,
n = rep(n[j], each = reps),
beta = rep(beta[k], each = reps)))
}
if(which.plot == "beta hat"){
beta_box <- rbind(beta_box, cbind(lis$beta_hat,
n = rep(n[j], each = reps),
beta = rep(beta[k], each = reps)))
}
if(which.plot == "r2"){
r2_box <- rbind(r2_box, cbind(lis$rsq,
n = rep(n[j], each = reps),
beta = rep(beta[k], each = reps)))
}
}
}
if(which.plot == "power"){
names(power_box) <- c("sim", "norm", "n", "betak")
power_box <- melt(power_box[-1,], id = c("n", "betak"))
power_box$betak <- as.factor(power_box$betak)
levels(power_box$betak) <- paste0(rep("beta = ", each = length(beta)), levels(power_box$betak))
p <- ggplot(power_box, aes(x = n, y = value)) +
geom_line(aes(group = variable, color = variable,
linetype = variable),
position=position_dodge(width=0.9)) +
facet_wrap(~betak) +
labs(x = "Sample size", y = "Power",
title = "Simulated Power")
return(p)
}else if(which.plot == "beta hat"){
beta_box <- beta_box[-1,]
beta_box$n <- as.factor(beta_box$n)
levels(beta_box$n) <- paste0(rep("n = ", each = length(n)), levels(beta_box$n))
beta_box$beta <- as.factor(beta_box$beta)
levels(beta_box$beta) <- paste0(rep("beta = ", each = length(beta)), levels(beta_box$beta))
names(beta_box) <- c("sim", "norm", "n", "betak")
p <-ggplot(beta_box, aes(x = norm, y = sim)) +
geom_point() +
labs(y = str_c("Estimated Coefficients (", eps.dist, " error distribution)"),
x = "Estimated Coefficients  (normal error distribution)",
title ="Simulated Estimated coefficients") +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(n~betak)
return(p)
}else if(which.plot == "r2"){
r2_box <- r2_box[-1,]
r2_box$n <- as.factor(r2_box$n)
levels(r2_box$n) <- paste0(rep("n = ", each = length(n)), levels(r2_box$n))
r2_box$beta <- as.factor(r2_box$beta)
levels(r2_box$beta) <- paste0(rep("beta = ", each = length(beta)), levels(r2_box$beta))
names(r2_box) <- c("sim", "norm", "n", "betak")
p <- ggplot(r2_box, aes(x = norm, y = sim)) +
geom_point() +
labs(x = "R-squared (normal error distribution)",
y = str_c("R-squared (", eps.dist, " error distribution)"),
title = "Simulated R-squared") +
geom_abline(slope = 1, intercept = 0)+
facet_wrap(n~betak)
return(p)
}
}
plotRegsim(reps = 100, n = c(50, 100, 500), beta = c(.4, .8, 1, 1.5),
eps.dist = "t",
which.plot = "power")
plotRegsim(reps = 100, n = c(50, 100, 500), beta = c(.4, .8, 1, 1.5),
eps.dist = "laplace", m = 0, s= 1,
which.plot = "r2")
plotRegsim(reps = 100, n = c(50, 100, 500), beta = c(.4, .8, 1, 1.5),
eps.dist = "uniform", min = -1, max = 1,
which.plot = "beta hat")
ggplot(r2_box, aes(x = norm, y = sim)) +
geom_point(size = 0.5) +
labs(x = "R-squared (normal error distribution)",
y = str_c("R-squared (", eps.dist, " error distribution)"),
title = "Simulated R-squared") +
geom_abline(slope = 1, intercept = 0)+
facet_wrap(n~betak)
ggplot(r2_box, aes(x = norm, y = sim)) +
geom_point(size = 0.2) +
labs(x = "R-squared (normal error distribution)",
y = str_c("R-squared (", eps.dist, " error distribution)"),
title = "Simulated R-squared") +
geom_abline(slope = 1, intercept = 0)+
facet_wrap(n~betak)
ggplot(r2_box, aes(x = norm, y = sim)) +
geom_point(size = 0.4) +
labs(x = "R-squared (normal error distribution)",
y = str_c("R-squared (", eps.dist, " error distribution)"),
title = "Simulated R-squared") +
geom_abline(slope = 1, intercept = 0)+
facet_wrap(n~betak)
expect_silent(plotRegsim(reps = 100,
n = 50,
beta = c(1, 1.5),
eps.dist = "laplace",
m = 0,
s= 1,
which.plot = "r2"))
plotRegsim(reps = 100,
n = 50,
beta = c(1, 1.5),
eps.dist = "laplace",
m = 0,
s= 1,
which.plot = "r2")
expect_silent(plotRegsim(reps = 1000,
n = c(50, 100, 200, 300, 400),
beta = c(.4, .8, 1, 1.5),
eps.dist = "t",
which.plot = "power"))
plotRegsim(reps = 1000,
n = c(50, 100, 200),
beta = c(.4, .8, 1, 1.5),
eps.dist = "t",
which.plot = "power")
plotRegsim(reps = 1000,
n = c(50, 100, 200),
beta = 4,
eps.dist = "laplace",
m = 0,
s= 1,
which.plot = "power")
expect_silent(plotRegsim(reps = 1000,
n = c(50, 100, 500),
beta = c(.4, .8, 1, 1.5),
eps.dist = "laplace",
m = 0,
s= 1,
which.plot = "r2"))
expect_silent(plotRegsim(reps = 1000,
n = 50,
beta = c(1, 1.5),
eps.dist = "t",
which.plot = "r2"))
expect_silent(plotRegsim(reps = 1000,
n = c(50, 100, 500),
beta = c(.4, .8, 1, 1.5),
eps.dist = "uniform",
min = -1,
max = 1,
which.plot = "r2"))
library(Simulation)
regsim(reps = 1000, n = 100, beta = 1.2, eps.dist = "laplace", m = 0 , s = 1)
plotRegsim(reps = 1000, n = c(50, 100, 500), beta = c(.4, .8, 1.5), eps.dist = "t", which.plot = "beta hat")
library(Simulation)
plotRegsim(reps = 1000, n = c(50, 100, 500), beta = c(.4, .8, 1.5), eps.dist = "t", which.plot = "beta hat")
library(Simulation)
library(Simulation)
library(rmutil)
library(rmutil)
library(rmutil)
library(rmutil)
library(Simulation)
library(Simulation)
